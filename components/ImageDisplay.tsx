import React from 'react';
import { Spinner } from './Spinner';
import { PhotoIcon } from './icons/PhotoIcon';
import { DownloadIcon } from './icons/DownloadIcon';

interface ImageDisplayProps {
  imageUrl: string | null;
  isLoading: boolean;
  loadingMessage: string;
  error: string | null;
  prompt: string;
  aspectRatio: string;
}

const aspectRatioClasses: { [key: string]: string } = {
    '1:1': 'aspect-square',
    '16:9': 'aspect-video',
    '9:16': 'aspect-[9/16]',
    '4:3': 'aspect-[4/3]',
    '3:4': 'aspect-[3/4]',
};

export const ImageDisplay: React.FC<ImageDisplayProps> = ({ imageUrl, isLoading, loadingMessage, error, prompt, aspectRatio }) => {
  
  const handleDownload = () => {
    if (!imageUrl) return;
    const link = document.createElement('a');
    link.href = imageUrl;
    const fileName = `${prompt.substring(0, 50).replace(/[^a-z0-9]/gi, '_').toLowerCase() || 'generated_image'}.jpg`;
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const renderContent = () => {
    if (isLoading) {
      return (
        <div className="flex flex-col items-center justify-center gap-4 text-slate-400">
          <Spinner />
          <p className="text-lg text-center px-4">{loadingMessage}</p>
        </div>
      );
    }

    if (error) {
      return (
        <div className="text-center text-red-400 bg-red-900/20 p-6 rounded-lg">
          <h3 className="font-bold text-lg mb-2">Oops! Something went wrong.</h3>
          <p className="text-sm">{error}</p>
        </div>
      );
    }

    if (imageUrl) {
      return (
         <div className="relative w-full h-full group">
            <img
              src={imageUrl}
              alt={prompt || "Generated by AI"}
              className="rounded-lg shadow-2xl object-contain w-full h-full transition-opacity duration-500 opacity-0 animate-fade-in"
            />
            <button
                onClick={handleDownload}
                className="absolute top-4 right-4 bg-black/50 text-white p-2 rounded-full hover:bg-black/80 transition-all opacity-0 group-hover:opacity-100 focus:opacity-100"
                aria-label="Download image"
            >
                <DownloadIcon className="w-6 h-6" />
            </button>
        </div>
      );
    }

    return (
      <div className="flex flex-col items-center justify-center gap-4 text-slate-500">
        <PhotoIcon className="w-24 h-24" />
        <p className="text-lg text-center">Your generated image will appear here.</p>
      </div>
    );
  };

  return (
    <div className={`w-full bg-slate-800/50 border-2 border-dashed border-slate-700 rounded-2xl flex items-center justify-center p-4 mb-6 transition-all duration-300 relative ${imageUrl ? aspectRatioClasses[aspectRatio] : 'aspect-square'}`}>
      {renderContent()}
      <style>{`
        @keyframes fade-in {
          from { opacity: 0; }
          to { opacity: 1; }
        }
        .animate-fade-in {
          animation: fade-in 0.5s ease-in-out forwards;
        }
      `}</style>
    </div>
  );
};